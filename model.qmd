---
title: "Model"
editor: visual
execute: 
  echo: false
  warning: false
  message: false
---
```{r}
library(tidyverse)
library(rstanarm)
library(ggplot2)
library(gtsummary)
```
**Center** Fitted Object
```{r}
c_stats<- read_csv("data/C_stats.csv")|>
  filter(MIN >=20)|>
  arrange((`FT%`))
fit_obj_c <- stan_glm(data = c_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)
fit_obj_c
#gtsummary::tbl_regression(fit_obj_c)

```

```{r}
newobs <- tibble(.rows = 1)


pe_c <- posterior_epred(object = fit_obj_c,
                      newdata = newobs) |> 
        as_tibble()

est_avg_ft_c<- pe_c |>
  ggplot(aes(x = `1`)) +
  geom_histogram(aes(y = after_stat(count/sum(count))),bins = 100, fill = "blue", color = "black") +
  geom_vline(xintercept = median(pe_c$`1`), linetype = "dotted", lwd = 1.5) +
  annotate("text", x = median(pe_c$`1`)+.02, y = .026, label = "Median: 71.69%", vjust = -1)+
  labs(title = "Posterior Estimated Predicted Free Throw % for Centers",
         x = "Estimated Average FT%",
         y = "Probability",
         caption = "Data source: FantasyPros") + 
  scale_x_continuous(labels = scales::number_format(accuracy = 0.005)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  theme_classic()+
  theme()

(est_avg_ft_c)
```


**Power Forward** Fitted Object
```{r}
pf_stats<- read_csv("data/PF_stats.csv")|>
  filter(MIN >=20)|>
  arrange(desc(`FT%`))

fit_obj_pf <- stan_glm(data = pf_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)
fit_obj_pf
```

```{r}
pf_stats<- read_csv("data/PF_stats.csv")|>
  filter(MIN >=20)|>
  arrange(desc(`FT%`))



fit_obj_pf <- stan_glm(data = pf_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)


newobs <- tibble(.rows = 1)


pe_pf <- posterior_epred(object = fit_obj_pf,
                      newdata = newobs) |> 
        as_tibble()


est_avg_ft_pf<- pe_pf|> 
  ggplot(aes(x = `1`)) +
  geom_histogram(aes(y = after_stat(count/sum(count))),bins = 100, fill = "blue", color = "black") +
  geom_vline(xintercept = median(pe_pf$`1`), linetype = "dotted", lwd = 1.5)+
  annotate("text", x = median(pe_pf$`1`)+.011, y = .033, label = "Median: 75.57%", vjust = -1)+
  labs(title = "Posterior Estimated Predicition Free Throw % for Power Forwards",
         x = "Estimated Average FT%",
         y = "Probability",
         caption = "Data source: Fantasy Pros") + 
  scale_x_continuous(labels = scales::number_format(accuracy = 0.005)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  theme_classic()+
  theme()


(est_avg_ft_pf)
```

**Small Forward** Fitted Object
```{r}
sf_stats<- read_csv("data/SF_stats.csv")|>
  filter(MIN >=20)|>
  arrange(desc(`FT%`))

fit_obj_sf <- stan_glm(data = sf_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)
fit_obj_sf
```

```{r}
sf_stats<- read_csv("data/SF_stats.csv")|>
  filter(MIN >=20)|>
  arrange(desc(`FT%`))



fit_obj_sf <- stan_glm(data = sf_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)


newobs <- tibble(.rows = 1)


pe_sf <- posterior_epred(object = fit_obj_sf,
                      newdata = newobs) |> 
        as_tibble()


est_avg_ft_sf<- pe_sf |> 
  ggplot(aes(x = `1`)) +
  geom_histogram(aes(y = after_stat(count/sum(count))),bins = 100, fill = "blue", color = "black") + 
  geom_vline(xintercept = median(pe_sf$`1`), linetype = "dotted", lwd = 1.5) +
  annotate("text", x = median(pe_sf$`1`)+.011, y = .03, label = "Median: 78.37%", vjust = -1)+
  labs(title = "Posterior Estimated Predicition Free Throw % for Small Forwards",
       x = "Estimated Average FT%",
       y = "Probability",
       caption = "Data source: FantasyPros") + 
  scale_x_continuous(labels = scales::number_format(accuracy = 0.005)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  theme_classic()+
  theme()
  

est_avg_ft_sf
```

**Shooting Guard** Fitted Object
```{r}
sg_stats<- read_csv("data/SG_stats.csv")|>
  filter(MIN >=20)|>
  arrange(desc(`FT%`))

fit_obj_sg <- stan_glm(data = sg_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)
fit_obj_sg

```

```{r}
sg_stats<- read_csv("data/SG_stats.csv")|>
  filter(MIN >=20)|>
  arrange(desc(`FT%`))



fit_obj_sg <- stan_glm(data = sg_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)


newobs <- tibble(.rows = 1)



pe_sg <- posterior_epred(object = fit_obj_sg,
                      newdata = newobs) |> 
        as_tibble()

median(pe_sg$`1`)
est_avg_ft_sg<- pe_sg |> 
  ggplot(aes(x = `1`)) +
  geom_histogram(aes(y = after_stat(count/sum(count))),bins = 100, fill = "blue", color = "black") +
  geom_vline(xintercept = median(pe_sg$`1`), linetype = "dotted", lwd = 1.5)+
  annotate("text", x = median(pe_sg$`1`)+.006, y = .03, label = "Median: 81.75%", vjust = -1)+
  labs(title = "Posterior Estimated Predicition Free Throw % for Shooting Gaurds",
         x = "Estimated Average FT%",
         y = "Probability",
         caption = "Data source: FantasyPros") + 
  scale_x_continuous(labels = scales::number_format(accuracy = 0.005)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  theme_classic()+
  theme()

(est_avg_ft_sg)
```

**Point Guard** Fitted Object
```{r}
pg_stats<- read_csv("data/PG_stats.csv")|>
  filter(MIN >=20)|>
  arrange(desc(`FT%`))

fit_obj_pg <- stan_glm(data = pg_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)
fit_obj_pg

```

```{r}
pg_stats<- read_csv("data/PG_stats.csv")|>
  filter(MIN >=20)|>
  arrange(desc(`FT%`))



fit_obj_pg <- stan_glm(data = pg_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)

newobs <- tibble(.rows = 1)



pe_pg <- posterior_epred(object = fit_obj_pg,
                      newdata = newobs) |> as_tibble()


est_avg_ft_pg<- pe_pg |> 
  ggplot(aes(x = `1`)) +
  geom_histogram(aes(y = after_stat(count/sum(count))),bins = 100, fill = "blue", color = "black") +
  geom_vline(xintercept = median(pe_pg$`1`), linetype = "dotted", lwd = 1.5)+
  annotate("text", x = median(pe_pg$`1`)+.011, y = .033, label = "Median: 76.37%", vjust = -1)+
  labs(title = "Posterior Estimated Predicition Free Throw % for Point Gaurds",
         x = "Estimated Average FT%",
         y = "Proabability",
         caption = "Data source: FantasyPros") + 
  scale_x_continuous(labels = scales::number_format(accuracy = 0.005)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  theme_classic()

(est_avg_ft_pg)
```


