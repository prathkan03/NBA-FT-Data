---
title: "NBA FT% at Each Position"
author: "Pratham Kancherla"
execute:
  echo: false
  message: false
  warning: false
---
```{r}
library(tidyverse)
library(rstanarm)
library(ggplot2)
library(plotly)
```
**Center** Predicted FT% 
```{r}
c_stats<- read_csv("data/C_stats.csv")|>
  filter(MIN >=20)|>
  arrange((`FT%`))
fit_obj_c <- stan_glm(data = c_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)
#fit_obj_c
newobs <- tibble(.rows = 1)

pe_c <- posterior_epred(object = fit_obj_c,
                      newdata = newobs) |> 
        as_tibble()
est_avg_ft_c<- pe_c |> 
  ggplot(aes(x = `1`)) +
    geom_histogram(aes(y = after_stat(count/sum(count))),bins = 100, fill = "blue", color = "black") + geom_vline(xintercept = median(pe_c$`1`), linetype = "dotted", lwd = 1.5) +
    labs(title = "Posterior Estimated Pblackicition FT% for Centers",
         subtitle = "Note that the plot is only consistent of estimated values",
         x = "Estimated Average FT%",
         y = "Probability",
         caption = "Data source: FantasyPros") + 
    scale_x_continuous(labels = scales::number_format(accuracy = 0.005)) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_classic()+theme()
ggplotly(est_avg_ft_c)
```
**Power Forward** Predicted FT%
```{r}
pf_stats<- read_csv("data/PF_stats.csv")|>
  filter(MIN >=20)|>
  arrange(desc(`FT%`))

fit_obj_pf <- stan_glm(data = pf_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)
#fit_obj_pf
newobs <- tibble(.rows = 1)

pe_pf <- posterior_epred(object = fit_obj_pf,
                      newdata = newobs) |> 
        as_tibble()
est_avg_ft_pf<- pe_pf|> 
  ggplot(aes(x = `1`)) +
    geom_histogram(aes(y = after_stat(count/sum(count))),bins = 100, fill = "blue", color = "black") + geom_vline(xintercept = median(pe_pf$`1`), linetype = "dotted", lwd = 1.5)+
    labs(title = "Posterior Estimated Predicition FT% for Power Forwards",
         subtitle = "Note that the plot is only consistent of estimated values",
         x = "Estimated Average FT%",
         y = "Probability",
         caption = "Data source: Fantasy Pros") + 
    scale_x_continuous(labels = scales::number_format(accuracy = 0.005)) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_classic()+theme()
ggplotly(est_avg_ft_pf)
```
**Small Forward** Predicted FT%
```{r}
sf_stats<- read_csv("data/SF_stats.csv")|>
  filter(MIN >=20)|>
  arrange(desc(`FT%`))

fit_obj_sf <- stan_glm(data = sf_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)
#fit_obj_sf
newobs <- tibble(.rows = 1)

pe_sf <- posterior_epred(object = fit_obj_sf,
                      newdata = newobs) |> 
        as_tibble()
est_avg_ft_sf<- pe_sf |> 
  ggplot(aes(x = `1`)) +
    geom_histogram(aes(y = after_stat(count/sum(count))),bins = 100, fill = "blue", color = "black") + geom_vline(xintercept = median(pe_sf$`1`), linetype = "dotted", lwd = 1.5) +
    labs(title = "Posterior Estimated Predicition FT% for Small Forwards",
         subtitle = "Note that the plot is only consistent of estimated values",
         x = "Estimated Average FT%",
         y = "Probability",
         caption = "Data source: FantasyPros") + 
    scale_x_continuous(labels = scales::number_format(accuracy = 0.005)) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_classic()+theme()
ggplotly(est_avg_ft_sf)
```
**Shooting Guard** Predicted FT%
```{r}
sg_stats<- read_csv("data/SG_stats.csv")|>
  filter(MIN >=20)|>
  arrange(desc(`FT%`))

fit_obj_sg <- stan_glm(data = sg_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)
#fit_obj_sg
newobs <- tibble(.rows = 1)

pe_sg <- posterior_epred(object = fit_obj_sg,
                      newdata = newobs) |> 
        as_tibble()

est_avg_ft_sg<- pe_sg |> 
  ggplot(aes(x = `1`)) +
    geom_histogram(aes(y = after_stat(count/sum(count))),bins = 100, fill = "blue", color = "black") + geom_vline(xintercept = median(pe_sg$`1`), linetype = "dotted", lwd = 1.5)+
    labs(title = "Posterior Estimated Predicition FT% for Shooting Gaurds",
         subtitle = "Note that the plot is only consistent of estimated values",
         x = "Estimated Average FT%",
         y = "Probability",
         caption = "Data source: FantasyPros") + 
    scale_x_continuous(labels = scales::number_format(accuracy = 0.005)) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_classic()+theme()
ggplotly(est_avg_ft_sg)
```
**Point Guard** Predicted FT%
```{r}
pg_stats<- read_csv("data/PG_stats.csv")|>
  filter(MIN >=20)|>
  arrange(desc(`FT%`))

fit_obj_pg <- stan_glm(data = pg_stats,
                    formula = `FT%` ~ 1,
                    family = gaussian,
                    refresh = 0,
                    seed = 9)
#fit_obj_pg
newobs <- tibble(.rows = 1)

pe_pg <- posterior_epred(object = fit_obj_pg,
                      newdata = newobs) |> 
        as_tibble()
est_avg_ft_pg<- pe_pg |> 
  ggplot(aes(x = `1`)) +
    geom_histogram(aes(y = after_stat(count/sum(count))),bins = 100, fill = "blue", color = "black") + geom_vline(xintercept = median(pe_pg$`1`), linetype = "dotted", lwd = 1.5)+
    labs(title = "Posterior Estimated Predicition FT% for Point Gaurds",
         subtitle = "Note that the plot is only consistent of estimated values",
         x = "Estimated Average FT%",
         y = "Proabability",
         caption = "Data source: FantasyPros") + 
    scale_x_continuous(labels = scales::number_format(accuracy = 0.005)) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
    theme_classic()+theme()
ggplotly(est_avg_ft_pg)
```

